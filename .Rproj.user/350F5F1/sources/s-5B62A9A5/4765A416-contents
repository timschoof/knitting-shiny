---
title: "Knitting maternal mortality rates"
subtitle: "An infinity scarf pattern"
output: pdf_document
params:
  stitch_rate: 50
  jitter: "yes"
  method: "circular"
---

```{r, echo = FALSE, warning = FALSE, message = FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)

# load packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(owidR) # devtools::install_github("piersyork/owidR")
library(janitor)
```

*This pattern was created by Tim Schoof for the Data Science By Design Anthology.*

```{r}
# variables pulled from Shiny App: stitch_rate, jitter
stitch_rate = params$stitch_rate
jitter = params$jitter
method = params$method
# show certain bits of text only for circular knitting
if(method == "circular"){
  show.text = TRUE
} else{
  show.text = FALSE
}
# specify pattern dimensions
nstitches = 200
nrows = 40 # Warning: this is currently hard-coded in the "Pattern" section below
# specify number of knit rows at the start and end of the pattern (i.e. no bobbles)
nknit_start = 2
nknit_end = 2
# specify stitch location of first bobble
first_bobble = 10
# jitter amount (this variable is used if jitter == "yes")
jitter_amount = 3
```


```{r}
# load data from https://ourworldindata.org/maternal-mortality
data <- owid("number-of-maternal-deaths-by-region")

# compute number of maternal deaths per minute in the world
d <- data %>%
  clean_names() %>%
  filter(code == "OWID_WRL",
         year == max(year)) %>%
  mutate(event_per_min = number_of_maternal_deaths/525960) # 525960 minutes per year

# set bobble frequency to number of maternal deaths per minute in the world
event_per_min = d$event_per_min

# some basic computations
tot_bobble_rows = nrows - nknit_start - nknit_end
bobble_freq =  round(stitch_rate / event_per_min)
total_stitches = nstitches * nrows

# determine stitch location of bobbles 
for (i in 1:tot_bobble_rows) {
  if (i == 1) {
    x_add = seq(from = first_bobble, to = nstitches, by = bobble_freq)
    x = x_add
    bobbles_row = length(x)
    y = rep(i+nknit_start,bobbles_row)
  }
  else {
    if (method == "circular") {
      prev_bobble = x_add[length(x_add)]
      next_bobble = bobble_freq - (nstitches - prev_bobble)
      x_add = seq(from = next_bobble, to = nstitches, by = bobble_freq)
    }
    else {
      if ((i %% 2) == 0) {
        # even rows
        prev_bobble = x_add[length(x_add)]
        next_bobble = nstitches - prev_bobble
        
        odd_dir_bobble = nstitches - (bobble_freq - next_bobble) + 1
        
        x_add = seq(from = odd_dir_bobble, to = 1, by = -1*bobble_freq)
      }
      else {
        # odd rows
        prev_bobble = x_add[length(x_add)]
        next_bobble = (bobble_freq - prev_bobble) + 1
        
        x_add = seq(from = next_bobble, to = nstitches, by = bobble_freq)
      }
    }
    bobbles_row = length(x_add)
    x = append(x, x_add)
    y_add = rep(i+nknit_start,bobbles_row)
    y = append(y,y_add)
  }
}

# create data frame
# optional: add jitter along x-axis (i.e. stitches)
if (jitter == "no") {
  df = tibble(x = x,
              y = y)
} else {
  df = tibble(x = round(jitter(x, amount = jitter_amount)),
              y = y)
  # prevent values from going negative
  df = df %>% 
    mutate(x = if_else(x < 1, 1, x))
}

# compute inter-bobble timings
dft <- df %>% 
  arrange(y,x) %>% 
  group_by(y) %>% 
  group_modify(~ add_row(.x, x = 201)) %>% 
  mutate(knit = x -1, 
         diff = lag(x),
         k = if_else(is.na(diff), knit, knit-diff),
         index = paste("ind_", row_number(), sep ="")) %>% 
  select(-knit, -diff) %>% 
  ungroup()

# write out pattern
pat <- dft %>% 
  select(-x) %>% 
  pivot_wider(id_cols = y, names_from = index, values_from = k) %>% 
  rowwise() %>%
  # write out pattern
  unite_("pattern", colnames(.)[-1]) %>%
  mutate(pattern = str_replace(pattern, regex("^0_"), "mb, k"),
         pattern = str_remove(pattern, "_0"),
         pattern = str_replace_all(pattern, "_", ", mb, k"),
         pattern = str_remove(pattern, ", mb, kNA"),
         pattern = paste("k", pattern, sep = ""),
         pattern = str_replace(pattern, "kmb", "mb"),
         row = paste("Row ", y, ":", sep = "")) %>% 
  # add first and last rounds of knitting
  add_row(y = 1, row = paste("Row 1-", nknit_start, ":", sep = ""), pattern = paste("k", nstitches, sep = "")) %>% 
  add_row(y = nrows-(nknit_end-1), row = paste("Row ",nrows-(nknit_end-1), "-", nrows, ":", sep = ""), pattern = paste("k", nstitches, sep = "")) %>% 
  arrange(y)
```


### Materials

* Medium or worsted weight yarn
* US size 9 (5.5 mm) `r if(show.text){"circular"}` knitting needles
* stitch marker

**Gauge:**  
16 sts / 21 rows = 4" (10 cm)  
Use any size needles to obtain gauge.

**Scarf dimensions:**  
48" (122 cm) by 8" (20 cm)

### Stitches

**k:** knit  
**p:** purl  
**mb (make bobble):** k1, p1, k1, p1, k1 into next stitch, turn, p5, turn, k5, pass the 4 stitches one at a time over the knit stitch and off the needle to finish bobble

### Pattern

**Cast on `r nstitches` stitches.** `r if(show.text){"Be careful not to twist any stitches when joining knitting in the round. Place a marker at the beginning of the round."}`

**`r pat$row[1]`** `r pat$pattern[1]`  
**`r pat$row[2]`** `r pat$pattern[2]`  
**`r pat$row[3]`** `r pat$pattern[3]`  
**`r pat$row[4]`** `r pat$pattern[4]`  
  
**`r pat$row[5]`** `r pat$pattern[5]`  
**`r pat$row[6]`** `r pat$pattern[6]`  
**`r pat$row[7]`** `r pat$pattern[7]`  
**`r pat$row[8]`** `r pat$pattern[8]`  
**`r pat$row[9]`** `r pat$pattern[9]`  
  
**`r pat$row[10]`** `r pat$pattern[10]`  
**`r pat$row[11]`** `r pat$pattern[11]`  
**`r pat$row[12]`** `r pat$pattern[12]`  
**`r pat$row[13]`** `r pat$pattern[13]`  
**`r pat$row[14]`** `r pat$pattern[14]`  
  
**`r pat$row[15]`** `r pat$pattern[15]`  
**`r pat$row[16]`** `r pat$pattern[16]`  
**`r pat$row[17]`** `r pat$pattern[17]`  
**`r pat$row[18]`** `r pat$pattern[18]`  
**`r pat$row[19]`** `r pat$pattern[19]`  
  
**`r pat$row[20]`** `r pat$pattern[20]`  
**`r pat$row[21]`** `r pat$pattern[21]`  
**`r pat$row[22]`** `r pat$pattern[22]`  
**`r pat$row[23]`** `r pat$pattern[23]`  
**`r pat$row[24]`** `r pat$pattern[24]`  
  
**`r pat$row[25]`** `r pat$pattern[25]`  
**`r pat$row[26]`** `r pat$pattern[26]`  
**`r pat$row[27]`** `r pat$pattern[27]`  
**`r pat$row[28]`** `r pat$pattern[28]`  
**`r pat$row[29]`** `r pat$pattern[29]`  
  
**`r pat$row[30]`** `r pat$pattern[30]`  
**`r pat$row[31]`** `r pat$pattern[31]`  
**`r pat$row[32]`** `r pat$pattern[32]`  
**`r pat$row[33]`** `r pat$pattern[33]`  
**`r pat$row[34]`** `r pat$pattern[34]`  
  
**`r pat$row[35]`** `r pat$pattern[35]`  
**`r pat$row[36]`** `r pat$pattern[36]`  
**`r pat$row[37]`** `r pat$pattern[37]`  
**`r pat$row[38]`** `r pat$pattern[38]`  

